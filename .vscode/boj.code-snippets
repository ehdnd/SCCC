{
  // Place your SCCC workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "import sys": {
    "scope": "python",
    "prefix": "!input",
    "body": [
      "import sys",
      "",
      "input = lambda: sys.stdin.readline().rstrip()",
      "MAX = 101010",
      "",
      "",
      "def jud():",
      "    return"
    ]
  },
  "cpp settings": {
    "scope": "cpp",
    "prefix": "!cpp",
    "body": [
      "#include <bits/stdc++.h>",
      "#define all(v) v.begin(), v.end()",
      "",
      "using namespace std;",
      "using ll = long long;",
      "using p = pair<ll, ll>;",
      "",
      "int main() {",
      "  cin.tie(0)->sync_with_stdio(0);",
      "return",
      "}"
    ]
  }
}
